أكيد، خلينا نوصل مكونات LogRocket إلى مشروعك Expo باستخدام React Native بشكل منظم وموثق، بناءً على أحدث التوجيهات الرسمية:


---

خطوات إعداد LogRocket في Expo + React Native

1. تثبيت الحزمة المطلوبة

استخدم الأمر التالي لتثبيت LogRocket و expo-build-properties لضبط إعدادات Android الضرورية:

npx expo install @logrocket/react-native expo-build-properties




---

2. تحديث ملف الإعداد app.json (أو app.config.js)

أضف إعدادات الإضافات (plugins) إلى التكوين، بما في ذلك expo-build-properties لتحديد الحد الأدنى لمستوى SDK لأجهزة Android، و @logrocket/react-native لتمكين LogRocket:

{
  "expo": {
    // باقي الإعدادات...
    "plugins": [
      [
        "expo-build-properties",
        {
          "android": {
            "minSdkVersion": 25
          }
        }
      ],
      "@logrocket/react-native"
    ]
  }
}




---

3. تحديث ملف android/build.gradle

أضف مستودع Maven الخاص بـ LogRocket داخل قسم allprojects، وليس داخل buildscript:

allprojects {
  repositories {
    // المستودعات الحالية ...
    maven { url "https://storage.googleapis.com/logrocket-maven/" }
  }
}

> من الضروري إضافته في هذا القسم لضمان إيجاد مكتبة LogRocket أثناء البناء.





---

4. تثبيت Pods للـ iOS (إن كنت تدعم iOS)

قم بتشغيل الأمر التالي لإكمال تثبيت LogRocket في مشروع iOS:

npx pod-install




---

5. تهيئة (Initialize) LogRocket داخل التطبيق

في مكون الجذر (App.js أو الأعلى)، استورد LogRocket وابدأ التهيئة باستخدام LogRocket.init مع App ID الخاص بك:

import React, { useEffect } from 'react';
import LogRocket from '@logrocket/react-native';

export default function App() {
  useEffect(() => {
    LogRocket.init('mfxetx/binarjoinanalytic');
  }, []);

  return (
    // بقية مكونات التطبيق...
  );
}



يمكنك إضافة إعدادات إضافية مثل تقنيات التقييد (redaction)، أو ملاحظة المستخدم، أو التقاط الاستثناءات حسب الحاجة.



---

6. التعامل مع Expo Go (عند التشغيل مباشرة دون EAS)

LogRocket يتطلب مكونات أصلية (native code)، لذا لا يمكن تشغيله ضمن Expo Go مباشرة. لحل هذه المشكلة، استخدم الحقل التالي ضمن تطبيقك:

import Constants from 'expo-constants';
import React, { useEffect } from 'react';

export default function LogRocketInit() {
  useEffect(() => {
    if (Constants.appOwnership !== 'expo') {
      const LogRocket = require('@logrocket/react-native');
      LogRocket.init('mfxetx/binarjoinanalytic');
    }
  }, []);

  return null;
}

وضع هذا المكون داخل App.js أو مكون الجذر لحجب تنفيذ LogRocket عندما كنت تستخدم Expo Go.



---

موجز الخطوات

الخطوة	الإجراء

1	npx expo install @logrocket/react-native expo-build-properties
2	تحديث app.json لإضافة الإضافات (plugins)
3	تحديث android/build.gradle بإضافة مستودع Maven لـ LogRocket
4	تشغيل npx pod-install لدعم iOS
5	استدعاء LogRocket.init('mfxetx/binarjoinanalytic') داخل التطبيق
6	تضمين مكوّن لتجاهل التهيئة في Expo Go عند الحاجة



---

إذا أردت، أقدر أساعدك بالتأكد من إعدادات إضافية مثل تقنيّة تعليق الشاشة (session replays)، أو زرّات الدمج مع أدوات الدعم أو التقارير داخل LogRocket. فقط أخبرني أي جزء تحب أركز عليه.

