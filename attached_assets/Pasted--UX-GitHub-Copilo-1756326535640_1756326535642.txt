رائع — جهزت لك برومبت جاهز يمكنك لصقه لمهندس منتج، مصمم UX، أو نموذج ذكاء اصطناعي (مثل GitHub Copilot / ChatGPT) ليولّد تصميمًّا وتنفيذًا متكاملاً لنظام الإشعارات لتطبيق إدارة موقع البناء وحسابات العمال. اللغة عربية رسمية احترافية، مع كل التدفق/الوظائف وطريقة عرض الإشعارات بشكل تفصيلي.

استخدم هذا البرومبت (انسخه كاملًا وأرسله إلى الأداة/الفريق)

مهمّة: تصميم وتنفيذ نظام إشعارات احترافي لتطبيق موبايلي لإدارة مواقع البناء وحسابات العمال.

الهدف العام:
- إنشاء نظام إشعارات متكامل يدعم الإرسال الفوري (push)، الإشعارات داخل التطبيق (in-app), البريد الإلكتروني، وSMS كخيار احتياطي.
- تحسين سرعة استجابة العمال والمديرين للأحداث المهمة (حوادث سلامة، تكليفات عمل، تغييرات الجدول، صرف رواتب، تنبيهات حضور/انصراف).
- توفير مركز إشعارات داخل التطبيق بواجهة موبايلي حديثة وقابلة للتخصيص مع سياسات تجميع/تأخير/تصنيف ذكيّة.

المستخدمون المستهدفون:
- مشرفو المواقع (Site Supervisors)
- عمال (Workers)
- محاسب/مخازن
- مدير المشروع (Project Manager)
- قسم السلامة (Safety Officer)

المتطلبات الوظيفية (High-level):
1. أنواع الإشعارات:
   - طارئ / أمني (Emergency / Safety Alert) — يظهر كـ modal/urgent push.
   - مهمة جديدة / تكليف (Task Assignment).
   - تحديث حالة مهمة (Task Status Change).
   - تذكير موعد/مِيعاد (Reminder/Schedule).
   - إعلام حضور/انصراف أو غياب (Attendance/Absence).
   - إشعار صرف راتب/مبالغ (Payroll / Payment).
   - إعلان عام / نشرة (Broadcast / Announcement).
   - رسالة داخلية / دردشة (Message / Chat).
   - إشعار خطأ نظامي / صيانة (System Alert).

2. قنوات التوصيل:
   - Push Notifications (Firebase / APNs) مع deeplink لفتح شاشة محددة.
   - In-app center تعرض كل الإشعارات مع فلاتر.
   - Email (للتقارير والملفات الطويلة).
   - SMS (كبديل عند عدم توفر الإنترنت أو للرسائل الحرجة).

3. سياسة الأولويّات:
   - Emergency > Task Assignment > Payroll > Announcement.
   - إشعارات الطوارئ تظهر فوراً وتُتجاوز وضع عدم الإزعاج (بحذر).
   - تجميع الإشعارات (Digest): تجميع إشعارات مماثلة خلال نافذة زمنية (مثلاً 10 دقائق) لتقليل الضوضاء.

4. إعدادات المستخدم:
   - تفعيل/إيقاف أنواع محددة (مثلاً: تعطيل الإعلانات العامة لكن إبقاء التنبيهات الأمنية).
   - نطاق الاستلام: كل المشروع / موقع محدد / فرق محددة / فردي.
   - نافذة "عدم الإزعاج" قابلة للضبط.
   - تفضيل قناة الاتصال (push > email > SMS).

UI / تصميم واجهات الموبايل (تفصيلي):
1. عناصر واجهة الإشعار (Notifications Center):
   - رأس الصفحة: عنوان "الإشعارات" مع عدد غير مقروء (badge).
   - تبويبات (Tabs) أفقية: "الكل" / "طارئ" / "المهام" / "الرواتب" / "الإعلانات".
   - قائمة الإشعارات: عنصر واحد يحتوي على:
     - أيقونة نوع الإشعار (مثل درع للسلامة، مفتاح للمهمة، محفظة للرواتب).
     - عنوان قصير (1-2 كلمات) — مثال: "حادث سلامة في البلوك B".
     - نص موجز (حتى سطرين) — وصف مختصر + اسم المرسل/الموقع.
     - وقت/تاريخ (نسبي: "قبل 5 دقائق" + عند الضغط يظهر الوقت الكامل).
     - مؤشر أولوية (نقاط أو لون جانبي — أحمر للطوارئ، برتقالي للمهام، أزرق للإعلانات).
     - زر/إيماءة سريع: "تأكيد" / "رفض" / "تعيين" / "عرض".
   - ترتيب: غير مقروء أولاً ثم بحسب الأولوية ثم الزمن.
   - دعم السحب (swipe): سحب لليمين لتعليم كمقروء/غير مقروء، سحب لليسار لحذف أو أرشفة.

2. بانر/توست عند الوصول:
   - إشعارات ذات أولوية منخفضة تظهر كـ Toast في أسفل الشاشة مع إمكانية النقر للذهاب.
   - إشعارات طارئة تظهر كـ full-screen modal مع خطوات واضحة (مثلاً: "اتخذ إجراء" + "أبلغ" + "تجاهل").

3. شاشة تفاصيل الإشعار:
   - تعرض الوصف الكامل، الوسائط المرفقة (صور حادث/فيديو)، خرائط الموقع، زر "اتخاذ إجراء" (اتصل بمشرف، فتح مهمة، تسجيل حضور)، وتوقيت التنبيه.
   - سجّل التفاعل: من قرأ ومتى.

4. إشعار ضمن القفل (Lock Screen) وCenter/Notification Shade:
   - رسالة قصيرة جداً + أيقونة المشروع + إجراء سريع (Reply / Acknowledge).
   - للرسائل الحساسة إظهار ملخص فقط، والمحتوى الكامل عند فتح التطبيق لأسباب أمنيّة/خصوصية.

تدفّق العمل (Flows) — سير الحدث خطوة بخطوة:
A. إنشاء حدث + إرسال إشعار
   1. حدث يحدث (مثلاً: مسؤول يعين مهمة جديدة عبر الـBackend).
   2. Backend ينشئ سجل إشعار في DB (notifications table) مع metadata.
   3. خدمة Notification Service تفحص اشتراكات المستخدم/المجموعة، أولويات، قيود DND، وتجهيز payload.
   4. ترسل Push عبر Firebase/APNs؛ إذا فشل أو المستخدم بلا إنترنت — تحفظ كـunread وتُرسل email/SMS (حسب تفضيل).
   5. عند تسليم الـpush: تُسجل حالة التسليم (delivered/failed).
   6. عند فتح المستخدم للإشعار: تُسجّل الحادثة كـread + trigger لإجراء إحصائي/متابعة.

B. تدفق طارئ (Emergency)
   - نفس الخطوات السابقة لكن مع تجاوز بعض الفلاتر، إرسال SMS كذلك، وفتح modal عند الدخول لأولى 100 مستخدم محددين كقائمة إسعاف.

C. تجميع (Digest) للمهام الصغيرة
   - إذا خلال 10 دقائق جاء >3 إشعارات من نفس النوع نفس المشروع للمستخدم نفسه -> إرسال إشعار موجز ("لديك 5 تحديثات مهام في المشروع X") بدلاً من 5 إشعارات منفصلة.

مخطط قاعدة البيانات مقترح (مهمّ ومباشر):
notifications (
  id UUID PRIMARY KEY,
  project_id UUID NULL,
  type VARCHAR, -- 'safety','task','payroll','announcement','message',...
  title VARCHAR,
  body TEXT,
  payload JSONB, -- رابط / task_id / attachments meta
  priority INT, -- 1 emergency .. 5 low
  recipients JSONB, -- list of user_ids / group ids
  channel_preference JSONB, -- {'push':true,'email':true,'sms':false}
  created_by UUID,
  created_at TIMESTAMP,
  scheduled_at TIMESTAMP NULL,
  delivered_to JSONB, -- mapping user_id -> {delivered_at,channel,status}
  read_by JSONB, -- mapping user_id -> read_at
  meta JSONB -- extra
)

نماذج Payload (JSON) لكل نوع:
- Task Assignment:
{
  "type":"task",
  "title":"تكليف: تركيب سقالة - البلوك C",
  "body":"تم تعيينك لتركيب السقالة في البلوك C الساعة 08:00 غدًا. اضغط للاطلاع على تفاصيل المهمة.",
  "payload":{"task_id":"...","project_id":"...","action":"open_task"}
}

- Safety Alert (طارئ):
{
  "type":"safety",
  "title":"تنبيه أمني: تسرب غاز",
  "body":"سُجل تسرب غاز في منطقة الحفر. اغادر الموقع فورًا واتبع تعليمات السلامة.",
  "payload":{"location":{"lat":..,"lng":..},"severity":"critical","action":"open_emergency"}
}

واجهات API مقترحة (RESTful):
- POST /api/notifications/send  -- body: {type, title, body, recipients, payload, scheduled_at}
- GET /api/users/{id}/notifications?filter=unread&tab=tasks
- POST /api/notifications/{id}/mark-read
- POST /api/notifications/mark-all-read
- GET /api/notifications/settings
- PUT /api/notifications/settings

قواعد أمان وخصوصية:
- لا تعرض معلومات حساسة في إشعارات الPush على شاشة القفل: عرض ملخص فقط، التفاصيل داخل التطبيق بعد المصادقة.
- صلاحيات وصول: تحديد قابلية الوصول للمشروع/مستوى المستخدم قبل التسليم.
- تشفير البيانات الحسّاسة في الحقول (payload إذا يحتوي على معلومات مالية).

متطلبات التشغيل (Backend):
- خدمة Notification Queue منفصلة (مثلاً: Celery/Sidekiq أو Worker queue) لمعالجة الإرسال والRetry.
- تكامل مع Firebase Cloud Messaging وAPNs، ومزوّد SMTP وSMS Gateway.
- سجل حالات التسليم (delivered, opened, failed) وRetry policy (3 محاولات مع تزايد فترة الانتظار).
- نظام Webhooks: ليُمكن الواجهات الخارجية (مثل نظام الحضور) من دفع إشعارات.

مقاسات/تفاصيل واجهة المستخدم (للـDesigner / Frontend):
- أيقونة القائمة: 44x44 dp.
- عنصر القائمة: height = 72 dp، padding 16 dp.
- خطوط: Title = 16sp bold، Body = 14sp regular، Timestamp = 12sp.
- الألوان: Emergency = #D32F2F (red)، Task = #FFA000 (amber)، Announcement = #1976D2 (blue).
- تباين اللون والنص يجب أن يلتزم بمعيار WCAG AA.
- دعم اتجاه RTL بالكامل (التطبيق بالعربية).

التفاعل والتصرفات السريعة (Micro-interactions):
- عند الضغط على زر "تأكيد" في إشعار المهمة: يتم فتح modal صغير وطلب تأكيد، ثم إرسال ACK إلى السيرفر.
- تأثير haptic خفيف عند إشعارات الطوارئ.
- عدّاد غير مقروء يتحدّث realtime باستخدام WebSocket/Socket.IO.

المقاييس والتحليلات:
- تتبع: معدل التسليم (delivery rate)، معدل الفتح (open rate)، زمن الاستجابة (time-to-action).
- تقارير دورية: إشعارات لم تُفتح خلال 24 ساعة -> إرسال ملخص لمدير المشروع.

اختبارات مقترحة (Acceptance Tests):
- إرسال إشعار مهمة -> يصل كـpush ويظهر داخل التطبيق -> يفتح تفاصيل المهمة.
- إرسال إشعار طارئ -> يظهر modal ويُرسل SMS (إن وُجد).
- تعطيل نوع إشعارات في الإعدادات -> لا يصل للمستخدم.
- تجميع الإشعارات -> خلال 10 دقائق، إشعار موجز وليس عدة إشعارات منفصلة.
- إخفاء محتوى الإشعار على شاشة القفل (privacy).

قوالب نصية مع أمثلة (باللغة العربية الرسمية، جاهزة للاستخدام):
- طارئ: "تنبيه أمني: تم رصد حادث في [الموقع]. يرجي الإخلاء واتباع تعليمات السلامة."
- مهمة: "مهمة جديدة: [عنوان المهمة] — الموعد: [تاريخ/وقت]. اضغط للاطلاع."
- تذكير: "تذكير: لديك موعد عمل في [المشروع] الساعة [الوقت]."
- رواتب: "تم إيداع الراتب لموظف [الاسم]، المبلغ: [xxx]. تفاصيـل في صفحة الحسابات."

ملاحظات تنفيذية نهائية:
- ابدأ بمرحلة MVP: دعم Push + In-app + جدول إشعارات، ثم أضف Email/SMS والـDigest.
- حافظ على واجهة قابلة للتوسيع (تسجيل أنواع جديدة من الإشعارات بسهولة).
- اجعل المنطق قابل للتجربة (Feature Flags) لاختبار تجارب تجميع/توقيت/قنوات مختلفة.

معايير القبول النهائية:
- مركز إشعارات يعمل، تظهر الإشعارات بحسب التفضيلات، عمليات التأكيد/القراءة تعمل، والإشعارات الطارئة تتجاوز القيود وفقًا للإعدادات الآمنة.

ملاحظات خفيفة (نبرة ودّية):

لو تحب أزوّد لك ملفات JSON جاهزة، أو شاشات Figma مقترحة، أو كود مثال للـAPI/worker بالـNode أو Python — أقدر أجهزها فورًا (بس قل لي أي تقنية تفضّلها). 😉


